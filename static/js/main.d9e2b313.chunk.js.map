{"version":3,"sources":["Card.js","Spinner.js","App.js","HOC.js","serviceWorker.js","index.js"],"names":["Card","props","state","className","this","movies","filter","el","name","toLowerCase","includes","input","trim","rating","star","map","padEnd","src","img","Component","Spinner","HOC","WrappedComponent","timeup","setTimeout","setState","console","log","React","handleChange","e","target","value","add","movielist","search","display","type","placeholder","onChange","onClick","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d9e2b313.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nclass Card extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                {this.props.movies && this.props.movies.filter(el => el.name.toLowerCase().includes(this.props.input.toLowerCase().trim()) && el.rating <= this.props.star).map(el => {\r\n                    return (\r\n                        <div className=\"movie-card\">\r\n                            <p className=\"movie-name\">{el.name}</p>\r\n                            <p className=\"movie-rating\">{\"\".padEnd(el.rating, \"⭐\")}</p>\r\n                            <img className=\"movie-img\" src={el.img} />\r\n                         </div>\r\n                    )\r\n                })}\r\n            </div>);\r\n    }\r\n}\r\nexport default Card;\r\n\r\n","import React from \"react\";\r\n\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div>\r\n      <img src=\"https://hover.hillsclerk.com/images/loading.gif\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;","import React, { Component } from 'react';\nimport './App.css'\nimport Card from './Card';\nimport HOC from \"./HOC\";\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      img: \"\",\n      rating: 0,\n      search: \"\",\n      movielist: [{rating:2,name:\"Abc\",img:\"https://maghreb.space/P622948/8f5a07bebb4d94ba59bceaf7f0690c46/___www_maghrebspace_net__12082014173148_262Afifa%20iskandar.jpg\"}],\n      star: 5,\n      display :false\n    }\n  }\n  handleChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n  star=(e)=> {\n    this.setState({\n      star:e\n    })\n  }\n  add=()=> {\n    this.setState ({\n      movielist : [...this.state.movielist,{name:this.state.name , img:this.state.img , rating:this.state.rating}], \n     \n    })\n  }\n  render() {\n    return (\n    <div className=\"movie-app\">\n      <header className=\"header\">\n        <input type='text' placeholder=\"Search\" onChange={(e) => this.setState({ search: e.target.value })} />\n        <span onClick ={()=>this.star(1)}>⭐</span>\n        <span onClick ={()=>this.star(2)}>⭐</span>\n        <span onClick ={()=>this.star(3)}>⭐</span>\n        <span onClick ={()=>this.star(4)}>⭐</span>\n        <span onClick ={()=>this.star(5)}>⭐</span>\n \n      </header>\n       <Card input ={this.state.search} star = {this.state.star} movies = {this.state.movielist} />\n      <p className=\"plus\" onClick ={()=>this.setState({display:!this.state.display})}>+</p>\n      <div className ={this.state.display ? \"display\":\"hidden\"}>\n        <input type=\"text\" placeholder=\"name\" name=\"name\" onChange={this.handleChange} />\n        <input type=\"text\" placeholder=\"Img\" name=\"img\" onChange={this.handleChange} />\n        <input type=\"text\" placeholder=\"rating\" name=\"rating\" onChange={this.handleChange} />\n        <button onClick={this.add}>Add</button>\n      </div>\n    </div>);\n  }\n}\nexport default HOC (App);","import React from \"react\";\r\nimport Spinner from \"./Spinner\";\r\n\r\nconst HOC = WrappedComponent => {\r\n  return class HOC extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        timeup: true\r\n      };\r\n\r\n      setTimeout(\r\n        () =>\r\n          this.setState({\r\n            timeup: false\r\n          }),\r\n        1500\r\n      );\r\n      console.log(this.state.timeup);\r\n    }\r\n\r\n    render() {\r\n      return this.state.timeup ? (\r\n        <Spinner />\r\n      ) : (\r\n        <WrappedComponent {...this.props} />\r\n      );\r\n    }\r\n  };\r\n};\r\n\r\nexport default HOC;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}